kind: Deployment
apiVersion: apps/v1
metadata:
  name: nllb-cog
  namespace: nllb-cog
  labels:
    app: nllb-cog
spec:
  progressDeadlineSeconds: 1200
  replicas: 1
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 0
  selector:
    matchLabels:
      app: nllb-cog
  template:
    metadata:
      labels:
        app: nllb-cog
    spec:
      tolerations:
      - key: CriticalAddonsOnly
        operator: Exists
      - key: nvidia.com/gpu
        operator: Exists
        effect: NoSchedule
      - key: "sku"
        operator: "Equal"
        value: "gpu"
        effect: "NoSchedule"
      topologySpreadConstraints:
      - maxSkew: 1
        topologyKey: kubernetes.io/hostname
        whenUnsatisfiable: DoNotSchedule
        labelSelector:
          matchLabels:
            app: nllb-cog
      affinity:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - key: agentpool
                operator: In
                values:
                - t4
      containers:
        - name: nllb-cog
          image: stablecog/nllb-cog:v1.1
          resources:
            limits:
              nvidia.com/gpu: 1
          # volumeMounts:
          # - mountPath: "/app/data"
          #   name: data-volume
          imagePullPolicy: "IfNotPresent"
          ports:
            - containerPort: 5000
          startupProbe:
            httpGet:
              path: /
              port: 5000
            initialDelaySeconds: 60
            periodSeconds: 10
            failureThreshold: 60
          livenessProbe:
            httpGet:
              path: /
              port: 5000
            initialDelaySeconds: 10
            periodSeconds: 5
          # envFrom:
          # - secretRef:
          #     name: nllb-cog
          env:
            - name: WORKER_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
      # volumes:
      #   - name: data-volume
      #     ephemeral:
      #       volumeClaimTemplate:
      #         metadata:
      #           labels:
      #             type: data-volume
      #         spec:
      #           accessModes: [ "ReadWriteOnce" ]
      #           storageClassName: managed-csi-premium
      #           resources:
      #             requests:
      #               storage: 256Gi